{"ast":null,"code":"var _jsxFileName = \"/Users/sameekshakumar/Documents - MacOS/Hackathon/Synapse/synapse-app/src/components/DailyCheckin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyCheckin = ({\n  onComplete\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const questions = [{\n    id: \"mental_drain\",\n    text: \"On a scale of 1-10, how mentally drained did you feel at the end of yesterday?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Fresh and energized\",\n      5: \"Moderately tired\",\n      10: \"Completely exhausted\"\n    }\n  }, {\n    id: \"focused_work_hours\",\n    text: \"How many hours of focused, deep work did you complete yesterday?\",\n    type: \"number\",\n    min: 0,\n    max: 16\n  }, {\n    id: \"productivity\",\n    text: \"On a scale of 1-10, how productive did you feel yesterday overall?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Very unproductive\",\n      5: \"Moderately productive\",\n      10: \"Highly productive\"\n    }\n  }, {\n    id: \"schedule_adherence\",\n    text: \"How well did you stick to your planned schedule yesterday?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Completely off track\",\n      5: \"Somewhat on track\",\n      10: \"Perfectly on schedule\"\n    }\n  }, {\n    id: \"sleep_hours\",\n    text: \"How many hours did you sleep last night?\",\n    type: \"number\",\n    min: 0,\n    max: 12\n  }, {\n    id: \"sleep_quality\",\n    text: \"On a scale of 1-10, how would you rate your sleep quality last night?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Terrible, restless\",\n      5: \"Average, some interruptions\",\n      10: \"Deep, refreshing sleep\"\n    }\n  }, {\n    id: \"energy_level\",\n    text: \"On a scale of 1-10, how energized do you feel right now?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Completely drained\",\n      5: \"Moderate energy\",\n      10: \"Highly energized\"\n    }\n  }, {\n    id: \"motivation\",\n    text: \"On a scale of 1-10, how motivated do you feel for today?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"No motivation\",\n      5: \"Some motivation\",\n      10: \"Extremely motivated\"\n    }\n  }, {\n    id: \"stress_level\",\n    text: \"On a scale of 1-10, how stressed/anxious do you feel right now?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Very calm and relaxed\",\n      5: \"Slightly stressed\",\n      10: \"Very stressed/anxious\"\n    }\n  }, {\n    id: \"caffeine_today\",\n    text: \"How much caffeine have you had/planned for today?\",\n    type: \"mcq\",\n    options: [{\n      value: \"none\",\n      label: \"None - Low (1 cup)\"\n    }, {\n      value: \"moderate\",\n      label: \"Moderate (2-3 cups)\"\n    }, {\n      value: \"high\",\n      label: \"High (4+ cups)\"\n    }]\n  }, {\n    id: \"meals_planned\",\n    text: \"How many meals do you plan to eat today?\",\n    type: \"number\",\n    min: 1,\n    max: 6\n  }, {\n    id: \"health_feeling\",\n    text: \"On a scale of 1-10, how healthy do you feel today?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Unwell/sluggish\",\n      5: \"Average health\",\n      10: \"Very healthy/vibrant\"\n    }\n  }, {\n    id: \"college_hours\",\n    text: \"College/Class Hours Today:\",\n    type: \"time_range\"\n  }, {\n    id: \"other_commitments\",\n    text: \"Other Fixed Commitments (meetings, appointments):\",\n    type: \"time_range\"\n  }, {\n    id: \"workload_demand\",\n    text: \"On a scale of 1-10, how challenging/demanding is your workload today?\",\n    type: \"slider\",\n    min: 1,\n    max: 10,\n    labels: {\n      1: \"Light, easy day\",\n      5: \"Moderate workload\",\n      10: \"Very demanding day\"\n    }\n  }, {\n    id: \"most_important_task\",\n    text: \"What is your single most important/demanding task for today?\",\n    type: \"text\"\n  }];\n  const handleAnswer = (questionId, answer) => {\n    setFormData(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n  const handleSubmit = () => {\n    const checkinData = {\n      ...formData,\n      timestamp: new Date().toISOString(),\n      date: new Date().toDateString()\n    };\n    onComplete(checkinData);\n  };\n  const isFormComplete = () => {\n    return questions.every(q => formData[q.id] !== undefined && formData[q.id] !== '');\n  };\n  const renderQuestion = question => {\n    switch (question.type) {\n      case 'slider':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.min,\n              max: question.max,\n              value: formData[question.id] || question.min,\n              onChange: e => handleAnswer(question.id, parseInt(e.target.value)),\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-value\",\n              children: formData[question.id] || question.min\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider-labels\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.labels[question.min]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.labels[Math.floor((question.min + question.max) / 2)]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.labels[question.max]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: question.min,\n            max: question.max,\n            value: formData[question.id] || '',\n            onChange: e => handleAnswer(question.id, parseInt(e.target.value) || 0),\n            className: \"input-field\",\n            placeholder: `Enter number between ${question.min} and ${question.max}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this);\n      case 'mcq':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${formData[question.id] === option.value ? 'selected' : ''}`,\n              onClick: () => handleAnswer(question.id, option.value),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"option-label\",\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData[question.id] || '',\n            onChange: e => handleAnswer(question.id, e.target.value),\n            className: \"input-field\",\n            placeholder: \"Enter your answer...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      case 'time_range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: formData[`${question.id}_start`] || '',\n              onChange: e => handleAnswer(`${question.id}_start`, e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time-separator\",\n              children: \"to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: formData[`${question.id}_end`] || '',\n              onChange: e => handleAnswer(`${question.id}_end`, e.target.value),\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Daily Check-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '30px',\n          opacity: 0.8\n        },\n        children: \"Let's check in on how you're feeling today and plan your day ahead.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), questions.map(renderQuestion)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSubmit,\n        disabled: !isFormComplete(),\n        children: \"Complete Daily Check-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyCheckin, \"CgHqyReD6jKK1NawX+yWoebGi8o=\");\n_c = DailyCheckin;\nexport default DailyCheckin;\nvar _c;\n$RefreshReg$(_c, \"DailyCheckin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DailyCheckin","onComplete","_s","formData","setFormData","questions","id","text","type","min","max","labels","options","value","label","handleAnswer","questionId","answer","prev","handleSubmit","checkinData","timestamp","Date","toISOString","date","toDateString","isFormComplete","every","q","undefined","renderQuestion","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","parseInt","target","Math","floor","placeholder","map","option","onClick","style","textAlign","marginBottom","opacity","disabled","_c","$RefreshReg$"],"sources":["/Users/sameekshakumar/Documents - MacOS/Hackathon/Synapse/synapse-app/src/components/DailyCheckin.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DailyCheckin = ({ onComplete }) => {\n  const [formData, setFormData] = useState({});\n\n  const questions = [\n    {\n      id: \"mental_drain\",\n      text: \"On a scale of 1-10, how mentally drained did you feel at the end of yesterday?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Fresh and energized\",\n        5: \"Moderately tired\", \n        10: \"Completely exhausted\"\n      }\n    },\n    {\n      id: \"focused_work_hours\",\n      text: \"How many hours of focused, deep work did you complete yesterday?\",\n      type: \"number\",\n      min: 0,\n      max: 16\n    },\n    {\n      id: \"productivity\",\n      text: \"On a scale of 1-10, how productive did you feel yesterday overall?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Very unproductive\",\n        5: \"Moderately productive\",\n        10: \"Highly productive\"\n      }\n    },\n    {\n      id: \"schedule_adherence\",\n      text: \"How well did you stick to your planned schedule yesterday?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Completely off track\",\n        5: \"Somewhat on track\",\n        10: \"Perfectly on schedule\"\n      }\n    },\n    {\n      id: \"sleep_hours\",\n      text: \"How many hours did you sleep last night?\",\n      type: \"number\",\n      min: 0,\n      max: 12\n    },\n    {\n      id: \"sleep_quality\",\n      text: \"On a scale of 1-10, how would you rate your sleep quality last night?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Terrible, restless\",\n        5: \"Average, some interruptions\",\n        10: \"Deep, refreshing sleep\"\n      }\n    },\n    {\n      id: \"energy_level\",\n      text: \"On a scale of 1-10, how energized do you feel right now?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Completely drained\",\n        5: \"Moderate energy\",\n        10: \"Highly energized\"\n      }\n    },\n    {\n      id: \"motivation\",\n      text: \"On a scale of 1-10, how motivated do you feel for today?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"No motivation\",\n        5: \"Some motivation\",\n        10: \"Extremely motivated\"\n      }\n    },\n    {\n      id: \"stress_level\",\n      text: \"On a scale of 1-10, how stressed/anxious do you feel right now?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Very calm and relaxed\",\n        5: \"Slightly stressed\",\n        10: \"Very stressed/anxious\"\n      }\n    },\n    {\n      id: \"caffeine_today\",\n      text: \"How much caffeine have you had/planned for today?\",\n      type: \"mcq\",\n      options: [\n        { value: \"none\", label: \"None - Low (1 cup)\" },\n        { value: \"moderate\", label: \"Moderate (2-3 cups)\" },\n        { value: \"high\", label: \"High (4+ cups)\" }\n      ]\n    },\n    {\n      id: \"meals_planned\",\n      text: \"How many meals do you plan to eat today?\",\n      type: \"number\",\n      min: 1,\n      max: 6\n    },\n    {\n      id: \"health_feeling\",\n      text: \"On a scale of 1-10, how healthy do you feel today?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Unwell/sluggish\",\n        5: \"Average health\",\n        10: \"Very healthy/vibrant\"\n      }\n    },\n    {\n      id: \"college_hours\",\n      text: \"College/Class Hours Today:\",\n      type: \"time_range\"\n    },\n    {\n      id: \"other_commitments\",\n      text: \"Other Fixed Commitments (meetings, appointments):\",\n      type: \"time_range\"\n    },\n    {\n      id: \"workload_demand\",\n      text: \"On a scale of 1-10, how challenging/demanding is your workload today?\",\n      type: \"slider\",\n      min: 1,\n      max: 10,\n      labels: {\n        1: \"Light, easy day\",\n        5: \"Moderate workload\",\n        10: \"Very demanding day\"\n      }\n    },\n    {\n      id: \"most_important_task\",\n      text: \"What is your single most important/demanding task for today?\",\n      type: \"text\"\n    }\n  ];\n\n  const handleAnswer = (questionId, answer) => {\n    setFormData(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  const handleSubmit = () => {\n    const checkinData = {\n      ...formData,\n      timestamp: new Date().toISOString(),\n      date: new Date().toDateString()\n    };\n    onComplete(checkinData);\n  };\n\n  const isFormComplete = () => {\n    return questions.every(q => formData[q.id] !== undefined && formData[q.id] !== '');\n  };\n\n  const renderQuestion = (question) => {\n    switch (question.type) {\n      case 'slider':\n        return (\n          <div key={question.id} className=\"question\">\n            <div className=\"question-text\">{question.text}</div>\n            <div className=\"slider-container\">\n              <input\n                type=\"range\"\n                min={question.min}\n                max={question.max}\n                value={formData[question.id] || question.min}\n                onChange={(e) => handleAnswer(question.id, parseInt(e.target.value))}\n                className=\"slider\"\n              />\n              <div className=\"slider-value\">{formData[question.id] || question.min}</div>\n              <div className=\"slider-labels\">\n                <span>{question.labels[question.min]}</span>\n                <span>{question.labels[Math.floor((question.min + question.max) / 2)]}</span>\n                <span>{question.labels[question.max]}</span>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'number':\n        return (\n          <div key={question.id} className=\"question\">\n            <div className=\"question-text\">{question.text}</div>\n            <input\n              type=\"number\"\n              min={question.min}\n              max={question.max}\n              value={formData[question.id] || ''}\n              onChange={(e) => handleAnswer(question.id, parseInt(e.target.value) || 0)}\n              className=\"input-field\"\n              placeholder={`Enter number between ${question.min} and ${question.max}`}\n            />\n          </div>\n        );\n\n      case 'mcq':\n        return (\n          <div key={question.id} className=\"question\">\n            <div className=\"question-text\">{question.text}</div>\n            <div className=\"options\">\n              {question.options.map((option) => (\n                <div\n                  key={option.value}\n                  className={`option ${formData[question.id] === option.value ? 'selected' : ''}`}\n                  onClick={() => handleAnswer(question.id, option.value)}\n                >\n                  <div className=\"option-label\">{option.label}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'text':\n        return (\n          <div key={question.id} className=\"question\">\n            <div className=\"question-text\">{question.text}</div>\n            <input\n              type=\"text\"\n              value={formData[question.id] || ''}\n              onChange={(e) => handleAnswer(question.id, e.target.value)}\n              className=\"input-field\"\n              placeholder=\"Enter your answer...\"\n            />\n          </div>\n        );\n\n      case 'time_range':\n        return (\n          <div key={question.id} className=\"question\">\n            <div className=\"question-text\">{question.text}</div>\n            <div className=\"time-input\">\n              <input\n                type=\"time\"\n                value={formData[`${question.id}_start`] || ''}\n                onChange={(e) => handleAnswer(`${question.id}_start`, e.target.value)}\n                className=\"input-field\"\n              />\n              <span className=\"time-separator\">to</span>\n              <input\n                type=\"time\"\n                value={formData[`${question.id}_end`] || ''}\n                onChange={(e) => handleAnswer(`${question.id}_end`, e.target.value)}\n                className=\"input-field\"\n              />\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <h2 className=\"section-title\">Daily Check-in</h2>\n        <p style={{ textAlign: 'center', marginBottom: '30px', opacity: 0.8 }}>\n          Let's check in on how you're feeling today and plan your day ahead.\n        </p>\n        \n        {questions.map(renderQuestion)}\n      </div>\n\n      <div className=\"button-container\">\n        <button \n          className=\"button\" \n          onClick={handleSubmit}\n          disabled={!isFormComplete()}\n        >\n          Complete Daily Check-in\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyCheckin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}